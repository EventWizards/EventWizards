{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"../Component/Filecss/Sign.css\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { Cookies } from \"react-cookie\";\n// import Swal from 'sweetalert2';\n\n// function LoginForm() {\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [username, setUserName] = useState(\"\");\n//   const [last_name, setLastName] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleSignIn = async () => {\n//     if (!email || !password) {\n//       setError(\"Email and password are required.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(\" http://localhost:3004/posts\", {\n//         email: email,\n//         password: password,\n//       });\n\n//       // if (response.status === 201) {\n//       //   history(\"/\"); \n\n//       // }\n\n//       // // Assuming the API returns a token\n//       // const token = response.data.token;\n//       // const user_id = response.data.user_id;\n//       // console.log(\"I am here>>>>>>>>>>>>>>>>>>>>>>>>>>>\", response.data);\n//       // Cookies.set(\"token\", token);\n//       // Cookies.set(\"user_id\", user_id);\n//       // // const id = Cookies.get(\"user_id\")\n//       // setError(\"Sign-in successful\");\n//       // history(\"/\");\n\n//       // // Handle successful sign-in, e.g., redirect or show a success message\n//       // alert(\"Sign-in successful:\", response.data);\n//       console.log(\"Sign-in successful:\", response.data);\n\n//     } catch (error) {\n//       // Delay the error message and handle it\n//       // setTimeout(() => {\n//         console.error(\"Sign-in error:\", error);\n//         setError(\"Sign-in failed. Email or password is invalid\");\n//       // }, 300);\n//     }\n//   };\n\n//   const handleSignUp = async (e) => {\n//   e.preventDefault();\n\n//     // Validation\n//     // if (!validateEmail(email)) {\n//     //   setError(\"Please enter a valid email.\");\n//     //   return;\n//     // } else{\n//     //     setError(\"\");\n//     // }\n\n//     // if (!validatePassword(password)) {\n//     //   setError(`Password must contain at least one lowercase letter, one uppercase letter, \\n\n//     //   one digit,\\n one special character (@#$%^&!), and be between 6 and 30 characters in length.`);\n//     //   return;\n//     // }   else {\n//     //     setError(\"\");\n//     // }\n//     // if(!validateFirstName(first_name))\n//     // {\n//     // setError(\"First Nmae must be between 3 and 20 characters in length.\");\n//     //   return;\n//     // }else {\n//     //    setError(\"\");\n//     // }\n\n//     // if(!validateLastName(last_name))\n//     // {\n//     // setError(\"Last Name must be between 3 and 20 characters in length.\");\n//     //   return;\n//     // }else {\n//     //    setError(\"\");\n//     // }\n\n//     try {\n//       const response = await axios.post(\" http://localhost:3004/posts\", {\n//         email: email,\n//         username: username,\n//         password: password\n//       });\n\n//       console.log(response.status);\n\n//       if (response.status === 201) {\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Event Created Successfully!',\n//           text: 'Your event has been created successfully.',\n//           timer: 3000,\n//           iconColor: '#FE7A00',\n//         });\n//       }\n//       navigate(\"/\");\n\n//     } catch (error) {\n//       if (error.response && error.response.status === 400) {\n//         setError(\"Email is already taken. Please use a different email.\");\n//       } else {\n//         setError(\"An error occurred. Please try again.\");\n//       }\n//     }\n//   };\n\n//   const handleLoginClick = () => {\n//     setIsLogin(true);\n//     document.querySelector(\".veen .wrapper\").classList.remove(\"move\");\n//     document.querySelector(\".body\").style.background =\n//       'url(\"https://images.pexels.com/photos/2774556/pexels-photo-2774556.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\") no-repeat center center / cover';\n//     document\n//       .querySelector(\".veen .rgstr-btn button\")\n//       .classList.remove(\"active\");\n//     document.querySelector(\".veen .login-btn button\").classList.add(\"active\");\n//   };\n\n//   const handleRegisterClick = () => {\n//     setIsLogin(false);\n//     document.querySelector(\".veen .wrapper\").classList.add(\"move\");\n//     document.querySelector(\".body\").style.background =\n//       'url(\"https://images.pexels.com/photos/2774556/pexels-photo-2774556.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\") no-repeat center center / cover';\n//     document\n//       .querySelector(\".veen .login-btn button\")\n//       .classList.remove(\"active\");\n//     document.querySelector(\".veen .rgstr-btn button\").classList.add(\"active\");\n//   };\n\n//   return (\n//     <div className=\"body\">\n//       <div className=\"veen\">\n//         <div className=\"login-btn splits\">\n//           {/* <p>Already a user?</p>\n//           <button\n//             className={isLogin ? \"active\" : \"\"}\n//             onClick={handleLoginClick}\n//           >\n//             Login\n//           </button> */}\n//         </div>\n//         <div className=\"rgstr-btn splits\">\n//           <p>Don't have an account?</p>\n//           <Link to =\"\">\n//           <button\n//             className={isLogin }\n//             onClick={handleRegisterClick}\n//           >\n//             Sign Up\n//           </button></Link>\n//         </div>\n//         <div className=\"wrapper\">\n//           <form\n//             id={isLogin }\n//             tabIndex={isLogin ? \"500\" : \"502\"}\n//             onSubmit={handleSignUp}\n//           >\n//             <h3>{isLogin}</h3>\n//             <div className=\"email\">\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               />\n//               <label>{isLogin ? \"Email or Username\" : \"Email\"}</label>\n//             </div>\n//             {!isLogin && (\n//               <div className=\"username\">\n//                 <input\n//                   type=\"text\"\n//                   name=\"username\"\n//                   required\n//                   value={username}\n//                   onChange={(e) => setUserName(e.target.value)}\n//                 />\n//                 <label>Full Name</label>\n//               </div>\n//             )}\n//             {!isLogin && (\n//               <div className=\"uid\">\n//                 <input type=\"text\" name=\"\" />\n//                 <label>User Name</label>\n//               </div>\n//             )}\n//             <div className=\"password\">\n//               <input\n//                 type=\"password\"\n//                 name=\"password\"\n//                 required\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//               />\n//               <label>Password</label>\n//             </div>\n//             <div className=\"submit\">\n//               <button\n//                 className=\"dark\"\n//                 // onClick={() => {\n//                 //   isLogin ? handleSignIn() : handleSignUp();\n//                 // }}\n//               >\n//                 {\" \"}\n//                 {isLogin }\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginForm;","map":{"version":3,"names":[],"sources":["C:/Users/Orange/Desktop/Event-Wizards/client/src/pages/Login.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"../Component/Filecss/Sign.css\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { Cookies } from \"react-cookie\";\r\n// import Swal from 'sweetalert2';\r\n\r\n// function LoginForm() {\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [username, setUserName] = useState(\"\");\r\n//   const [last_name, setLastName] = useState(\"\");\r\n//   const [phone, setPhone] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n\r\n//   const handleSignIn = async () => {\r\n//     if (!email || !password) {\r\n//       setError(\"Email and password are required.\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(\" http://localhost:3004/posts\", {\r\n//         email: email,\r\n//         password: password,\r\n//       });\r\n      \r\n//       // if (response.status === 201) {\r\n//       //   history(\"/\"); \r\n\r\n//       // }\r\n\r\n//       // // Assuming the API returns a token\r\n//       // const token = response.data.token;\r\n//       // const user_id = response.data.user_id;\r\n//       // console.log(\"I am here>>>>>>>>>>>>>>>>>>>>>>>>>>>\", response.data);\r\n//       // Cookies.set(\"token\", token);\r\n//       // Cookies.set(\"user_id\", user_id);\r\n//       // // const id = Cookies.get(\"user_id\")\r\n//       // setError(\"Sign-in successful\");\r\n//       // history(\"/\");\r\n\r\n//       // // Handle successful sign-in, e.g., redirect or show a success message\r\n//       // alert(\"Sign-in successful:\", response.data);\r\n//       console.log(\"Sign-in successful:\", response.data);\r\n    \r\n//     } catch (error) {\r\n//       // Delay the error message and handle it\r\n//       // setTimeout(() => {\r\n//         console.error(\"Sign-in error:\", error);\r\n//         setError(\"Sign-in failed. Email or password is invalid\");\r\n//       // }, 300);\r\n//     }\r\n//   };\r\n  \r\n\r\n\r\n\r\n\r\n//   const handleSignUp = async (e) => {\r\n//   e.preventDefault();\r\n\r\n//     // Validation\r\n//     // if (!validateEmail(email)) {\r\n//     //   setError(\"Please enter a valid email.\");\r\n//     //   return;\r\n//     // } else{\r\n//     //     setError(\"\");\r\n//     // }\r\n\r\n//     // if (!validatePassword(password)) {\r\n//     //   setError(`Password must contain at least one lowercase letter, one uppercase letter, \\n\r\n//     //   one digit,\\n one special character (@#$%^&!), and be between 6 and 30 characters in length.`);\r\n//     //   return;\r\n//     // }   else {\r\n//     //     setError(\"\");\r\n//     // }\r\n//     // if(!validateFirstName(first_name))\r\n//     // {\r\n//     // setError(\"First Nmae must be between 3 and 20 characters in length.\");\r\n//     //   return;\r\n//     // }else {\r\n//     //    setError(\"\");\r\n//     // }\r\n\r\n//     // if(!validateLastName(last_name))\r\n//     // {\r\n//     // setError(\"Last Name must be between 3 and 20 characters in length.\");\r\n//     //   return;\r\n//     // }else {\r\n//     //    setError(\"\");\r\n//     // }\r\n\r\n//     try {\r\n//       const response = await axios.post(\" http://localhost:3004/posts\", {\r\n//         email: email,\r\n//         username: username,\r\n//         password: password\r\n//       });\r\n\r\n//       console.log(response.status);\r\n\r\n//       if (response.status === 201) {\r\n//         Swal.fire({\r\n//           icon: 'success',\r\n//           title: 'Event Created Successfully!',\r\n//           text: 'Your event has been created successfully.',\r\n//           timer: 3000,\r\n//           iconColor: '#FE7A00',\r\n//         });\r\n//       }\r\n//       navigate(\"/\");\r\n\r\n//     } catch (error) {\r\n//       if (error.response && error.response.status === 400) {\r\n//         setError(\"Email is already taken. Please use a different email.\");\r\n//       } else {\r\n//         setError(\"An error occurred. Please try again.\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleLoginClick = () => {\r\n//     setIsLogin(true);\r\n//     document.querySelector(\".veen .wrapper\").classList.remove(\"move\");\r\n//     document.querySelector(\".body\").style.background =\r\n//       'url(\"https://images.pexels.com/photos/2774556/pexels-photo-2774556.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\") no-repeat center center / cover';\r\n//     document\r\n//       .querySelector(\".veen .rgstr-btn button\")\r\n//       .classList.remove(\"active\");\r\n//     document.querySelector(\".veen .login-btn button\").classList.add(\"active\");\r\n//   };\r\n\r\n//   const handleRegisterClick = () => {\r\n//     setIsLogin(false);\r\n//     document.querySelector(\".veen .wrapper\").classList.add(\"move\");\r\n//     document.querySelector(\".body\").style.background =\r\n//       'url(\"https://images.pexels.com/photos/2774556/pexels-photo-2774556.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\") no-repeat center center / cover';\r\n//     document\r\n//       .querySelector(\".veen .login-btn button\")\r\n//       .classList.remove(\"active\");\r\n//     document.querySelector(\".veen .rgstr-btn button\").classList.add(\"active\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"body\">\r\n//       <div className=\"veen\">\r\n//         <div className=\"login-btn splits\">\r\n//           {/* <p>Already a user?</p>\r\n//           <button\r\n//             className={isLogin ? \"active\" : \"\"}\r\n//             onClick={handleLoginClick}\r\n//           >\r\n//             Login\r\n//           </button> */}\r\n//         </div>\r\n//         <div className=\"rgstr-btn splits\">\r\n//           <p>Don't have an account?</p>\r\n//           <Link to =\"\">\r\n//           <button\r\n//             className={isLogin }\r\n//             onClick={handleRegisterClick}\r\n//           >\r\n//             Sign Up\r\n//           </button></Link>\r\n//         </div>\r\n//         <div className=\"wrapper\">\r\n//           <form\r\n//             id={isLogin }\r\n//             tabIndex={isLogin ? \"500\" : \"502\"}\r\n//             onSubmit={handleSignUp}\r\n//           >\r\n//             <h3>{isLogin}</h3>\r\n//             <div className=\"email\">\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//               />\r\n//               <label>{isLogin ? \"Email or Username\" : \"Email\"}</label>\r\n//             </div>\r\n//             {!isLogin && (\r\n//               <div className=\"username\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"username\"\r\n//                   required\r\n//                   value={username}\r\n//                   onChange={(e) => setUserName(e.target.value)}\r\n//                 />\r\n//                 <label>Full Name</label>\r\n//               </div>\r\n//             )}\r\n//             {!isLogin && (\r\n//               <div className=\"uid\">\r\n//                 <input type=\"text\" name=\"\" />\r\n//                 <label>User Name</label>\r\n//               </div>\r\n//             )}\r\n//             <div className=\"password\">\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 required\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//               />\r\n//               <label>Password</label>\r\n//             </div>\r\n//             <div className=\"submit\">\r\n//               <button\r\n//                 className=\"dark\"\r\n//                 // onClick={() => {\r\n//                 //   isLogin ? handleSignIn() : handleSignUp();\r\n//                 // }}\r\n//               >\r\n//                 {\" \"}\r\n//                 {isLogin }\r\n//               </button>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginForm;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}